@model WCSummerCampRegistration.Models.AvailWeekViewModels.AvailWeekViewModel
@using WCSummerCampRegistration.Extensions
@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>AvailWeek</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>


            <div class="form-group">
                @{
                    <label asp-for="AvailWeek.Name" class="control-label"></label>
                    <select asp-for="AvailWeek.Name" id="wname" mame="wname" class="form-control">
                        @{
                            //foreach (var val in @EnumHelper<AvailWeek.EWeekStarts>.GetDisplayValues(AvailWeek.EWeekStarts.Week1))
                            //foreach (var val in typeof(AvailWeek.EWeekStarts).GetEnumValues())
                            //foreach (AvailWeek.EWeekStarts val in AvailWeek)
                            foreach (var eweek in (AvailWeek.EWeekStarts[])Enum.GetValues(typeof(AvailWeek.EWeekStarts)))
                            {
                                <option value="@eweek.GetDisplayName()">@eweek.GetDisplayName()</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="AvailWeek.Name" id="wnamevalidation" mame="wnamevalidation" class="text-danger"></span>
                }
            </div>

            @*
                <div class="form-group">
                <label asp-for="AvailWeek.Name" class="control-label"></label>
                <input asp-for="AvailWeek.Name" class="form-control" />
                <select asp-for="AvailWeek.Name" asp-items="Html.GetEnumSelectList<AvailWeek.EWeekStarts>()" class="form-control"></select>
                <span asp-validation-for="AvailWeek.Name" class="text-danger"></span>
                </div>
            *@
            <div class="form-group">
                <label asp-for="AvailWeek.CategoryId" class="control-label"></label>
                <select asp-for="@Model.AvailWeek.CategoryId" id="CategoryId" class="form-control" asp-items="Model.Category.ToSelectListItem(Model.AvailWeek.CategoryId)"></select>
            </div>
            <div class="form-group">
                <label asp-for="AvailWeek.CampId" class="control-label"></label>
                @*<select asp-for="CampId" class="form-control" asp-items="ViewBag.CampId"></select>*@
                <select asp-for="AvailWeek.CampId" name="CampId" id="CampId" asp-items="@(new SelectList(string.Empty,"Id","Name"))" class="form-control"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
    $(document).ready(function(){
        getCamps();
        $('#CategoryId').change(function () {
            getCamps();
        })

        $("form").on('submit', function () {
            if ($("form").valid()) {
                var result = true;
                doesWeekCampCatExistAsync(function (res) {
                    result = res;
                });

                if (result) {
                    return true;
                }
                else {
                    $("#wnamevalidation").html("Week \"<b>" + $("#wname").val() + "</b>\" for category \"<b>" + $("#CategoryId option:selected").text() + "</b>\" and  for camp \"<b>" + $("#CampId option:selected").text() + "</b>\" alredy exists.");
                    return false;
                }
            }
        });

    });

    function getCamps() {
        var url = '@Url.Content("~/")' + "AvailWeeks/GetCamps";
        var ddlsource = "#CategoryId";
        $.getJSON(url, { CategoryID: $(ddlsource).val() }, function (data) {
            var items = '';
            $("#CampId").empty();
            $.each(data, function (i, camp) {
                items += "<option value='" + camp.value + "'>" + camp.text + "</option>";
            });
            $('#CampId').html(items);
        })

    }

    function doesWeekCampCatExistAsync(callback) {
        var res = false;
        var url = '@Url.Content("~/")' + "AvailWeeks/DoesWeekCampCatExistAsync";
        var namesource = "#wname";
        var catsource = "#CategoryId";
        var campsource = "#CampId";
        var data = { NAME: $(namesource).val(), CATEGORYID: $(catsource).val(), CAMPID: $(campsource).val() };

        $.ajax({
            url: url,
            dataType: 'json',
            async: false,
            data: data,
            success: function (data) {
                res = data;
                callback(data);
            }
        });
    }

    </script>

}
